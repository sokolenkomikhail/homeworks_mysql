-- 2. Задание на оконные функции
-- Построить запрос, который будет выводить следующие столбцы:

-- имя группы
-- среднее количество пользователей в группах
-- самый молодой пользователь в группе
-- самый пожилой пользователь в группе
-- общее количество пользователей в группе
-- всего пользователей в системе
-- отношение в процентах (общее количество пользователей в группе /
-- всего пользователей в системе) * 100

-- Не получилось сделать правильно по всем столбцам. 
-- Количество пользователей в системе и среднее количество пользователей в группах 
-- выводятся вложенными запросами
-- Понимаю, что это не верное решение, но по другому не получалось вывести количество
-- уникальных пользователей. Проблема в том, что пользователи могут состоять в группах
-- (одной или нескольких), а могут и не состоять. Соответственно получается выборка по пользователям 
-- в группах, и к ним еще добавляются пользователи без групп. Соответственно пользователи в группах дублируются
-- и я не могу отфильтровать дубли. COUNT(DISTINCT ...) не работает с оконными функциями. 
-- Потратил очень много времени на эту задачу, но так и не получилось. 
-- Хорошо было бы разобрать эту задачу на следующем уроке

SELECT DISTINCT
	c.name,
	(SELECT COUNT(user_id)/COUNT(DISTINCT community_id) FROM communities_users) AS avg,
	FIRST_VALUE(p.user_id) OVER(PARTITION BY c.name ORDER BY p.birthday DESC) AS yongest,
	FIRST_VALUE(p.user_id) OVER(PARTITION BY c.name ORDER BY p.birthday) AS oldest,
	COUNT(p.user_id) OVER w AS total_in_group,
	(SELECT COUNT(*) FROM profiles) AS total_users, 
	COUNT(p.user_id) OVER w / (SELECT COUNT(*) FROM profiles) * 100 AS '%%'
		FROM communities AS c
		JOIN communities_users AS cu ON c.id = cu.community_id
		JOIN profiles AS p ON cu.user_id = p.user_id
		WINDOW w AS (PARTITION BY c.name)
;

